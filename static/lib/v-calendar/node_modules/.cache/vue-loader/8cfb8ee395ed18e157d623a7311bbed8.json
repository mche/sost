{"remainingRequest":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/guest/Ostanin-dev/static/lib/v-calendar/src/components/PopoverRow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/src/components/PopoverRow.vue","mtime":1592351795000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { childMixin } from '../utils/mixins';\n\nexport default {\n  name: 'PopoverRow',\n  mixins: [childMixin],\n  props: {\n    attribute: Object,\n  },\n  computed: {\n    indicator() {\n      const { highlight, dot, bar, content, popover } = this.attribute;\n      if (popover && popover.hideIndicator) return null;\n      if (highlight) {\n        const { color, isDark } = highlight.start;\n        return {\n          class: this.theme.getConfig('bgAccentHigh', {\n            color,\n            isDark: !isDark,\n          }),\n          style: {\n            width: '10px',\n            height: '5px',\n            borderRadius: '3px',\n          },\n        };\n      }\n      if (dot) {\n        const { color, isDark } = dot.start;\n        return {\n          class: this.theme.getConfig('bgAccentHigh', {\n            color,\n            isDark: !isDark,\n          }),\n          style: {\n            width: '5px',\n            height: '5px',\n            borderRadius: '50%',\n          },\n        };\n      }\n      if (bar) {\n        const { color, isDark } = bar.start;\n        return {\n          class: this.theme.getConfig('bgAccentHigh', {\n            color,\n            isDark: !isDark,\n          }),\n          style: {\n            width: '10px',\n            height: '3px',\n          },\n        };\n      }\n      if (content) {\n        const { color, isDark } = content.start;\n        return {\n          class: this.theme.getConfig('contentContrast', {\n            color,\n            isDark: !isDark,\n          }),\n        };\n      }\n      return null;\n    },\n  },\n};\n",{"version":3,"sources":["PopoverRow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopoverRow.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- Content row -->\n  <div class=\"vc-day-popover-row\">\n    <!-- Indicator -->\n    <div v-if=\"indicator\" class=\"vc-day-popover-row-indicator\">\n      <span :style=\"indicator.style\" :class=\"indicator.class\" />\n    </div>\n    <!-- Content -->\n    <div class=\"vc-day-popover-row-content\">\n      <slot>{{\n        attribute.popover ? attribute.popover.label : 'No content provided'\n      }}</slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { childMixin } from '../utils/mixins';\n\nexport default {\n  name: 'PopoverRow',\n  mixins: [childMixin],\n  props: {\n    attribute: Object,\n  },\n  computed: {\n    indicator() {\n      const { highlight, dot, bar, content, popover } = this.attribute;\n      if (popover && popover.hideIndicator) return null;\n      if (highlight) {\n        const { color, isDark } = highlight.start;\n        return {\n          class: this.theme.getConfig('bgAccentHigh', {\n            color,\n            isDark: !isDark,\n          }),\n          style: {\n            width: '10px',\n            height: '5px',\n            borderRadius: '3px',\n          },\n        };\n      }\n      if (dot) {\n        const { color, isDark } = dot.start;\n        return {\n          class: this.theme.getConfig('bgAccentHigh', {\n            color,\n            isDark: !isDark,\n          }),\n          style: {\n            width: '5px',\n            height: '5px',\n            borderRadius: '50%',\n          },\n        };\n      }\n      if (bar) {\n        const { color, isDark } = bar.start;\n        return {\n          class: this.theme.getConfig('bgAccentHigh', {\n            color,\n            isDark: !isDark,\n          }),\n          style: {\n            width: '10px',\n            height: '3px',\n          },\n        };\n      }\n      if (content) {\n        const { color, isDark } = content.start;\n        return {\n          class: this.theme.getConfig('contentContrast', {\n            color,\n            isDark: !isDark,\n          }),\n        };\n      }\n      return null;\n    },\n  },\n};\n</script>\n\n<style lang=\"postcss\" scoped>\n.vc-day-popover-row {\n  --day-content-transition-time: 0.13s ease-in;\n  display: flex;\n  align-items: center;\n  transition: all var(--day-content-transition-time);\n  &:not(:first-child) {\n    margin-top: 3px;\n  }\n}\n.vc-day-popover-row-indicator {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 0;\n  width: 15px;\n  margin-right: 3px;\n  & span {\n    transition: all var(--day-content-transition-time);\n  }\n}\n.vc-day-popover-row-content {\n  display: flex;\n  align-items: center;\n  flex-wrap: none;\n  flex-grow: 1;\n  width: max-content;\n}\n</style>\n"]}]}