{"remainingRequest":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js??ref--13-0!/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/screens.js","dependencies":[{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/screens.js","mtime":1592351795000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Vue won't get included in bundle as it is externalized\n// https://cli.vuejs.org/guide/build-targets.html#library\nimport Vue from 'vue';\nimport buildMediaQuery from './buildMediaQuery';\nimport defaultScreens from './defaults/screens.json';\nimport { isUndefined, mapValues, toPairs, has } from './_';\nlet isSettingUp = false;\nlet shouldRefreshQueries = false;\nlet screensComp = null;\nexport function setupScreens(screens = defaultScreens, forceSetup) {\n  if (screensComp && !forceSetup || isSettingUp) {\n    return;\n  }\n\n  isSettingUp = true;\n  shouldRefreshQueries = true; // Use a private Vue component to store reactive screen matches\n\n  screensComp = new Vue({\n    data() {\n      return {\n        matches: [],\n        queries: []\n      };\n    },\n\n    methods: {\n      refreshQueries() {\n        this.queries = mapValues(screens, v => {\n          const query = window.matchMedia(buildMediaQuery(v));\n          query.addListener(this.refreshMatches);\n          return query;\n        });\n        this.refreshMatches();\n      },\n\n      refreshMatches() {\n        this.matches = toPairs(this.queries).filter(p => p[1].matches).map(p => p[0]);\n      }\n\n    }\n  });\n  isSettingUp = false;\n} // Global mixin that provides responsive '$screens' utility method\n// that refreshes any time the screen matches update\n\nVue.mixin({\n  beforeCreate() {\n    if (!isSettingUp) {\n      setupScreens();\n    }\n  },\n\n  mounted() {\n    if (shouldRefreshQueries && screensComp) {\n      screensComp.refreshQueries();\n      shouldRefreshQueries = false;\n    }\n  },\n\n  computed: {\n    $screens() {\n      return (config, def) => screensComp.matches.reduce((prev, curr) => has(config, curr) ? config[curr] : prev, isUndefined(def) ? config.default : def);\n    }\n\n  }\n});",{"version":3,"sources":["/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/screens.js"],"names":["Vue","buildMediaQuery","defaultScreens","isUndefined","mapValues","toPairs","has","isSettingUp","shouldRefreshQueries","screensComp","setupScreens","screens","forceSetup","data","matches","queries","methods","refreshQueries","v","query","window","matchMedia","addListener","refreshMatches","filter","p","map","mixin","beforeCreate","mounted","computed","$screens","config","def","reduce","prev","curr","default"],"mappings":"AAAA;AACA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,GAA1C,QAAqD,KAArD;AAEA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,oBAAoB,GAAG,KAA3B;AACA,IAAIC,WAAW,GAAG,IAAlB;AAEA,OAAO,SAASC,YAAT,CAAsBC,OAAO,GAAGT,cAAhC,EAAgDU,UAAhD,EAA4D;AACjE,MAAKH,WAAW,IAAI,CAACG,UAAjB,IAAgCL,WAApC,EAAiD;AAC/C;AACD;;AACDA,EAAAA,WAAW,GAAG,IAAd;AACAC,EAAAA,oBAAoB,GAAG,IAAvB,CALiE,CAMjE;;AACAC,EAAAA,WAAW,GAAG,IAAIT,GAAJ,CAAQ;AACpBa,IAAAA,IAAI,GAAG;AACL,aAAO;AACLC,QAAAA,OAAO,EAAE,EADJ;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAP;AAID,KANmB;;AAOpBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,cAAc,GAAG;AACf,aAAKF,OAAL,GAAeX,SAAS,CAACO,OAAD,EAAUO,CAAC,IAAI;AACrC,gBAAMC,KAAK,GAAGC,MAAM,CAACC,UAAP,CAAkBpB,eAAe,CAACiB,CAAD,CAAjC,CAAd;AACAC,UAAAA,KAAK,CAACG,WAAN,CAAkB,KAAKC,cAAvB;AACA,iBAAOJ,KAAP;AACD,SAJuB,CAAxB;AAKA,aAAKI,cAAL;AACD,OARM;;AASPA,MAAAA,cAAc,GAAG;AACf,aAAKT,OAAL,GAAeT,OAAO,CAAC,KAAKU,OAAN,CAAP,CACZS,MADY,CACLC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKX,OADL,EAEZY,GAFY,CAERD,CAAC,IAAIA,CAAC,CAAC,CAAD,CAFE,CAAf;AAGD;;AAbM;AAPW,GAAR,CAAd;AAuBAlB,EAAAA,WAAW,GAAG,KAAd;AACD,C,CAED;AACA;;AACAP,GAAG,CAAC2B,KAAJ,CAAU;AACRC,EAAAA,YAAY,GAAG;AACb,QAAI,CAACrB,WAAL,EAAkB;AAChBG,MAAAA,YAAY;AACb;AACF,GALO;;AAMRmB,EAAAA,OAAO,GAAG;AACR,QAAIrB,oBAAoB,IAAIC,WAA5B,EAAyC;AACvCA,MAAAA,WAAW,CAACQ,cAAZ;AACAT,MAAAA,oBAAoB,GAAG,KAAvB;AACD;AACF,GAXO;;AAYRsB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,GAAG;AACT,aAAO,CAACC,MAAD,EAASC,GAAT,KACLxB,WAAW,CAACK,OAAZ,CAAoBoB,MAApB,CACE,CAACC,IAAD,EAAOC,IAAP,KAAiB9B,GAAG,CAAC0B,MAAD,EAASI,IAAT,CAAH,GAAoBJ,MAAM,CAACI,IAAD,CAA1B,GAAmCD,IADtD,EAEEhC,WAAW,CAAC8B,GAAD,CAAX,GAAmBD,MAAM,CAACK,OAA1B,GAAoCJ,GAFtC,CADF;AAKD;;AAPO;AAZF,CAAV","sourcesContent":["// Vue won't get included in bundle as it is externalized\n// https://cli.vuejs.org/guide/build-targets.html#library\nimport Vue from 'vue';\nimport buildMediaQuery from './buildMediaQuery';\nimport defaultScreens from './defaults/screens.json';\nimport { isUndefined, mapValues, toPairs, has } from './_';\n\nlet isSettingUp = false;\nlet shouldRefreshQueries = false;\nlet screensComp = null;\n\nexport function setupScreens(screens = defaultScreens, forceSetup) {\n  if ((screensComp && !forceSetup) || isSettingUp) {\n    return;\n  }\n  isSettingUp = true;\n  shouldRefreshQueries = true;\n  // Use a private Vue component to store reactive screen matches\n  screensComp = new Vue({\n    data() {\n      return {\n        matches: [],\n        queries: [],\n      };\n    },\n    methods: {\n      refreshQueries() {\n        this.queries = mapValues(screens, v => {\n          const query = window.matchMedia(buildMediaQuery(v));\n          query.addListener(this.refreshMatches);\n          return query;\n        });\n        this.refreshMatches();\n      },\n      refreshMatches() {\n        this.matches = toPairs(this.queries)\n          .filter(p => p[1].matches)\n          .map(p => p[0]);\n      },\n    },\n  });\n  isSettingUp = false;\n}\n\n// Global mixin that provides responsive '$screens' utility method\n// that refreshes any time the screen matches update\nVue.mixin({\n  beforeCreate() {\n    if (!isSettingUp) {\n      setupScreens();\n    }\n  },\n  mounted() {\n    if (shouldRefreshQueries && screensComp) {\n      screensComp.refreshQueries();\n      shouldRefreshQueries = false;\n    }\n  },\n  computed: {\n    $screens() {\n      return (config, def) =>\n        screensComp.matches.reduce(\n          (prev, curr) => (has(config, curr) ? config[curr] : prev),\n          isUndefined(def) ? config.default : def,\n        );\n    },\n  },\n});\n"]}]}