{"remainingRequest":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js??ref--13-0!/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/locale.js","dependencies":[{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/locale.js","mtime":1592430355000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { format, parse } from './fecha';\nimport defaultLocales from './defaults/locales';\nimport { addPages, pageForDate } from './helpers';\nimport { isDate, isNumber, isString, isObject, has, defaultsDeep, clamp } from './_';\nconst daysInWeek = 7;\nconst daysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport function resolveConfig(config, locales) {\n  // Get the detected locale string\n  const detLocale = new Intl.DateTimeFormat().resolvedOptions().locale; // Resolve the locale id\n\n  let id;\n\n  if (isString(config)) {\n    id = config;\n  } else if (has(config, 'id')) {\n    id = config.id;\n  }\n\n  id = (id || detLocale).toLowerCase();\n  const localeKeys = Object.keys(locales);\n\n  const validKey = k => localeKeys.find(lk => lk.toLowerCase() === k);\n\n  id = validKey(id) || validKey(id.substring(0, 2)) || detLocale; // Add fallback and spread default locale to prevent repetitive update loops\n\n  const defLocale = { ...locales['en-IE'],\n    ...locales[id],\n    id\n  }; // Assign or merge defaults with provided config\n\n  config = isObject(config) ? defaultsDeep(config, defLocale) : defLocale; // Return resolved config\n\n  return config;\n}\nexport default class Locale {\n  constructor(config, locales = defaultLocales) {\n    const {\n      id,\n      firstDayOfWeek,\n      masks\n    } = resolveConfig(config, locales);\n    this.id = id;\n    this.firstDayOfWeek = clamp(firstDayOfWeek, 1, daysInWeek);\n    this.masks = masks;\n    this.dayNames = this.getDayNames('long');\n    this.dayNamesShort = this.getDayNames('short');\n    this.dayNamesShorter = this.dayNamesShort.map(s => s.substring(0, 2));\n    this.dayNamesNarrow = this.getDayNames('narrow');\n    this.monthNames = this.getMonthNames('long');\n    this.monthNamesShort = this.getMonthNames('short');\n    this.monthData = {}; // Bind methods\n\n    this.getMonthComps = this.getMonthComps.bind(this);\n    this.parse = this.parse.bind(this);\n    this.format = this.format.bind(this);\n    this.toDate = this.toDate.bind(this);\n    this.toPage = this.toPage.bind(this);\n  }\n\n  parse(dateStr, mask) {\n    return parse(dateStr, mask || this.masks.L, this);\n  }\n\n  format(date, mask) {\n    return format(date, mask || this.masks.L, this);\n  }\n\n  toDate(d, mask) {\n    if (isDate(d)) {\n      return new Date(d.getTime());\n    }\n\n    if (isNumber(d)) {\n      return new Date(d);\n    }\n\n    if (isString(d)) {\n      return this.parse(d, mask);\n    }\n\n    if (isObject(d)) {\n      const date = new Date();\n      return new Date(d.year || date.getFullYear(), d.month || date.getMonth(), d.day || date.getDate());\n    }\n\n    return d;\n  }\n\n  toPage(arg, fromPage) {\n    if (isNumber(arg)) {\n      return addPages(fromPage, arg);\n    }\n\n    if (isString(arg)) {\n      return pageForDate(this.toDate(arg));\n    }\n\n    if (isDate(arg)) {\n      return pageForDate(arg);\n    }\n\n    if (isObject(arg)) {\n      return arg;\n    }\n\n    return null;\n  }\n\n  getMonthDates(year = 2000) {\n    const dates = [];\n\n    for (let i = 0; i < 12; i++) {\n      dates.push(new Date(year, i, 15));\n    }\n\n    return dates;\n  }\n\n  getMonthNames(length) {\n    const dtf = new Intl.DateTimeFormat(this.id, {\n      month: length,\n      timezome: 'UTC'\n    });\n    return this.getMonthDates().map(d => dtf.format(d));\n  }\n\n  getWeekdayDates({\n    year = 2000,\n    utc = false,\n    firstDayOfWeek = this.firstDayOfWeek\n  } = {}) {\n    const dates = [];\n\n    for (let i = 1, j = 0; j < daysInWeek; i++) {\n      const d = utc ? new Date(Date.UTC(year, 0, i)) : new Date(year, 0, i);\n      const day = utc ? d.getUTCDay() : d.getDay();\n\n      if (day === firstDayOfWeek - 1 || j > 0) {\n        dates.push(d);\n        j++;\n      }\n    }\n\n    return dates;\n  }\n\n  getDayNames(length) {\n    const dtf = new Intl.DateTimeFormat(this.id, {\n      weekday: length,\n      timeZone: 'UTC'\n    });\n    return this.getWeekdayDates({\n      firstDayOfWeek: 1,\n      utc: true\n    }).map(d => dtf.format(d));\n  } // Days/month/year components for a given month and year\n\n\n  getMonthComps(month, year) {\n    const key = `${month}-${year}`;\n    let comps = this.monthData[key];\n\n    if (!comps) {\n      const inLeapYear = year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n      const firstWeekday = new Date(year, month - 1, 1).getDay() + 1;\n      const days = month === 2 && inLeapYear ? 29 : daysInMonths[month - 1];\n      const weeks = Math.ceil((days + Math.abs(firstWeekday - this.firstDayOfWeek)) / daysInWeek);\n      comps = {\n        firstDayOfWeek: this.firstDayOfWeek,\n        inLeapYear,\n        firstWeekday,\n        days,\n        weeks,\n        month,\n        year\n      };\n      this.monthData[key] = comps;\n    }\n\n    return comps;\n  } // Days/month/year components for today's month\n\n\n  getThisMonthComps() {\n    const date = new Date();\n    return this.getMonthComps(date.getMonth() + 1, date.getFullYear());\n  } // Day/month/year components for previous month\n\n\n  getPrevMonthComps(month, year) {\n    if (month === 1) return this.getMonthComps(12, year - 1);\n    return this.getMonthComps(month - 1, year);\n  } // Day/month/year components for next month\n\n\n  getNextMonthComps(month, year) {\n    if (month === 12) return this.getMonthComps(1, year + 1);\n    return this.getMonthComps(month + 1, year);\n  }\n\n  getDayFromDate(date) {\n    if (!date) return null;\n    const month = date.getMonth() + 1;\n    const year = date.getUTCFullYear();\n    const comps = this.getMonthComps(month, year);\n    const day = date.getDate();\n    const dayFromEnd = comps.days - day + 1;\n    const weekday = date.getDay() + 1;\n    const weekdayOrdinal = Math.floor((day - 1) / 7 + 1);\n    const weekdayOrdinalFromEnd = Math.floor((comps.days - day) / 7 + 1);\n    const week = Math.ceil((day + Math.abs(comps.firstWeekday - comps.firstDayOfWeek)) / 7);\n    const weekFromEnd = comps.weeks - week + 1;\n    return {\n      day,\n      dayFromEnd,\n      weekday,\n      weekdayOrdinal,\n      weekdayOrdinalFromEnd,\n      week,\n      weekFromEnd,\n      month,\n      year,\n      date,\n      dateTime: date.getTime()\n    };\n  } // Buils day components for a given page\n\n\n  getCalendarDays({\n    monthComps,\n    prevMonthComps,\n    nextMonthComps\n  }) {\n    const days = [];\n    const {\n      firstDayOfWeek,\n      firstWeekday\n    } = monthComps;\n    const prevMonthDaysToShow = firstWeekday + (firstWeekday < firstDayOfWeek ? daysInWeek : 0) - firstDayOfWeek;\n    let prevMonth = true;\n    let thisMonth = false;\n    let nextMonth = false; // Formatter for aria labels\n\n    const formatter = new Intl.DateTimeFormat(this.id, {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }); // Init counters with previous month's data\n\n    let day = prevMonthComps.days - prevMonthDaysToShow + 1;\n    let dayFromEnd = prevMonthComps.days - day + 1;\n    let weekdayOrdinal = Math.floor((day - 1) / daysInWeek + 1);\n    let weekdayOrdinalFromEnd = 1;\n    let week = prevMonthComps.weeks;\n    let weekFromEnd = 1;\n    let month = prevMonthComps.month;\n    let year = prevMonthComps.year; // Store todays comps\n\n    const today = new Date();\n    const todayDay = today.getDate();\n    const todayMonth = today.getMonth() + 1;\n    const todayYear = today.getFullYear(); // Cycle through 6 weeks (max in month)\n\n    for (let w = 1; w <= 6; w++) {\n      // Cycle through days in week\n      for (let i = 1, weekday = firstDayOfWeek; i <= daysInWeek; i++, weekday += weekday === daysInWeek ? 1 - daysInWeek : 1) {\n        // We need to know when to start counting actual month days\n        if (prevMonth && weekday === firstWeekday) {\n          // Reset counters for current month\n          day = 1;\n          dayFromEnd = monthComps.days;\n          weekdayOrdinal = Math.floor((day - 1) / daysInWeek + 1);\n          weekdayOrdinalFromEnd = Math.floor((monthComps.days - day) / daysInWeek + 1);\n          week = 1;\n          weekFromEnd = monthComps.weeks;\n          month = monthComps.month;\n          year = monthComps.year; // ...and flag we're tracking actual month days\n\n          prevMonth = false;\n          thisMonth = true;\n        } // Append day info for the current week\n        // Note: this might or might not be an actual month day\n        //  We don't know how the UI wants to display various days,\n        //  so we'll supply all the data we can\n\n\n        const date = new Date(year, month - 1, day);\n        const id = this.format(date, 'YYYY-MM-DD');\n        const weekdayPosition = i;\n        const weekdayPositionFromEnd = daysInWeek - i;\n        const isToday = day === todayDay && month === todayMonth && year === todayYear;\n        const isFirstDay = thisMonth && day === 1;\n        const isLastDay = thisMonth && day === monthComps.days;\n        const onTop = w === 1;\n        const onBottom = w === 6;\n        const onLeft = i === 1;\n        const onRight = i === daysInWeek;\n        days.push({\n          id,\n          label: day.toString(),\n          ariaLabel: formatter.format(date),\n          day,\n          dayFromEnd,\n          weekday,\n          weekdayPosition,\n          weekdayPositionFromEnd,\n          weekdayOrdinal,\n          weekdayOrdinalFromEnd,\n          week,\n          weekFromEnd,\n          month,\n          year,\n          date,\n          dateTime: date.getTime(),\n          isToday,\n          isFirstDay,\n          isLastDay,\n          inMonth: thisMonth,\n          inPrevMonth: prevMonth,\n          inNextMonth: nextMonth,\n          onTop,\n          onBottom,\n          onLeft,\n          onRight,\n          classes: [`id-${id}`, `day-${day}`, `day-from-end-${dayFromEnd}`, `weekday-${weekday}`, `weekday-position-${weekdayPosition}`, `weekday-ordinal-${weekdayOrdinal}`, `weekday-ordinal-from-end-${weekdayOrdinalFromEnd}`, `week-${week}`, `week-from-end-${weekFromEnd}`, {\n            'is-today': isToday,\n            'is-first-day': isFirstDay,\n            'is-last-day': isLastDay,\n            'in-month': thisMonth,\n            'in-prev-month': prevMonth,\n            'in-next-month': nextMonth,\n            'on-top': onTop,\n            'on-bottom': onBottom,\n            'on-left': onLeft,\n            'on-right': onRight\n          }]\n        }); // See if we've hit the last day of the month\n\n        if (thisMonth && isLastDay) {\n          thisMonth = false;\n          nextMonth = true; // Reset counters to next month's data\n\n          day = 1;\n          dayFromEnd = nextMonthComps.days;\n          weekdayOrdinal = 1;\n          weekdayOrdinalFromEnd = Math.floor((nextMonthComps.days - day) / daysInWeek + 1);\n          week = 1;\n          weekFromEnd = nextMonthComps.weeks;\n          month = nextMonthComps.month;\n          year = nextMonthComps.year; // Still in the middle of the month (hasn't ended yet)\n        } else {\n          day++;\n          dayFromEnd--;\n          weekdayOrdinal = Math.floor((day - 1) / daysInWeek + 1);\n          weekdayOrdinalFromEnd = Math.floor((monthComps.days - day) / daysInWeek + 1);\n        }\n      } // Append week days\n\n\n      week++;\n      weekFromEnd--;\n    }\n\n    return days;\n  }\n\n}",{"version":3,"sources":["/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/locale.js"],"names":["format","parse","defaultLocales","addPages","pageForDate","isDate","isNumber","isString","isObject","has","defaultsDeep","clamp","daysInWeek","daysInMonths","resolveConfig","config","locales","detLocale","Intl","DateTimeFormat","resolvedOptions","locale","id","toLowerCase","localeKeys","Object","keys","validKey","k","find","lk","substring","defLocale","Locale","constructor","firstDayOfWeek","masks","dayNames","getDayNames","dayNamesShort","dayNamesShorter","map","s","dayNamesNarrow","monthNames","getMonthNames","monthNamesShort","monthData","getMonthComps","bind","toDate","toPage","dateStr","mask","L","date","d","Date","getTime","year","getFullYear","month","getMonth","day","getDate","arg","fromPage","getMonthDates","dates","i","push","length","dtf","timezome","getWeekdayDates","utc","j","UTC","getUTCDay","getDay","weekday","timeZone","key","comps","inLeapYear","firstWeekday","days","weeks","Math","ceil","abs","getThisMonthComps","getPrevMonthComps","getNextMonthComps","getDayFromDate","getUTCFullYear","dayFromEnd","weekdayOrdinal","floor","weekdayOrdinalFromEnd","week","weekFromEnd","dateTime","getCalendarDays","monthComps","prevMonthComps","nextMonthComps","prevMonthDaysToShow","prevMonth","thisMonth","nextMonth","formatter","today","todayDay","todayMonth","todayYear","w","weekdayPosition","weekdayPositionFromEnd","isToday","isFirstDay","isLastDay","onTop","onBottom","onLeft","onRight","label","toString","ariaLabel","inMonth","inPrevMonth","inNextMonth","classes"],"mappings":"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","sourcesContent":["import { format, parse } from './fecha';\nimport defaultLocales from './defaults/locales';\nimport { addPages, pageForDate } from './helpers';\nimport {\n  isDate,\n  isNumber,\n  isString,\n  isObject,\n  has,\n  defaultsDeep,\n  clamp,\n} from './_';\n\nconst daysInWeek = 7;\nconst daysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nexport function resolveConfig(config, locales) {\n  // Get the detected locale string\n  const detLocale = new Intl.DateTimeFormat().resolvedOptions().locale;\n  // Resolve the locale id\n  let id;\n  if (isString(config)) {\n    id = config;\n  } else if (has(config, 'id')) {\n    id = config.id;\n  }\n  id = (id || detLocale).toLowerCase();\n  const localeKeys = Object.keys(locales);\n  const validKey = (k) => localeKeys.find((lk) => lk.toLowerCase() === k);\n  id = validKey(id) || validKey(id.substring(0, 2)) || detLocale;\n  // Add fallback and spread default locale to prevent repetitive update loops\n  const defLocale = { ...locales['en-IE'], ...locales[id], id };\n  // Assign or merge defaults with provided config\n  config = isObject(config) ? defaultsDeep(config, defLocale) : defLocale;\n  // Return resolved config\n  return config;\n}\n\nexport default class Locale {\n  constructor(config, locales = defaultLocales) {\n    const { id, firstDayOfWeek, masks } = resolveConfig(config, locales);\n    this.id = id;\n    this.firstDayOfWeek = clamp(firstDayOfWeek, 1, daysInWeek);\n    this.masks = masks;\n    this.dayNames = this.getDayNames('long');\n    this.dayNamesShort = this.getDayNames('short');\n    this.dayNamesShorter = this.dayNamesShort.map((s) => s.substring(0, 2));\n    this.dayNamesNarrow = this.getDayNames('narrow');\n    this.monthNames = this.getMonthNames('long');\n    this.monthNamesShort = this.getMonthNames('short');\n    this.monthData = {};\n    // Bind methods\n    this.getMonthComps = this.getMonthComps.bind(this);\n    this.parse = this.parse.bind(this);\n    this.format = this.format.bind(this);\n    this.toDate = this.toDate.bind(this);\n    this.toPage = this.toPage.bind(this);\n  }\n\n  parse(dateStr, mask) {\n    return parse(dateStr, mask || this.masks.L, this);\n  }\n\n  format(date, mask) {\n    return format(date, mask || this.masks.L, this);\n  }\n\n  toDate(d, mask) {\n    if (isDate(d)) {\n      return new Date(d.getTime());\n    }\n    if (isNumber(d)) {\n      return new Date(d);\n    }\n    if (isString(d)) {\n      return this.parse(d, mask);\n    }\n    if (isObject(d)) {\n      const date = new Date();\n      return new Date(\n        d.year || date.getFullYear(),\n        d.month || date.getMonth(),\n        d.day || date.getDate(),\n      );\n    }\n    return d;\n  }\n\n  toPage(arg, fromPage) {\n    if (isNumber(arg)) {\n      return addPages(fromPage, arg);\n    }\n    if (isString(arg)) {\n      return pageForDate(this.toDate(arg));\n    }\n    if (isDate(arg)) {\n      return pageForDate(arg);\n    }\n    if (isObject(arg)) {\n      return arg;\n    }\n    return null;\n  }\n\n  getMonthDates(year = 2000) {\n    const dates = [];\n    for (let i = 0; i < 12; i++) {\n      dates.push(new Date(year, i, 15));\n    }\n    return dates;\n  }\n\n  getMonthNames(length) {\n    const dtf = new Intl.DateTimeFormat(this.id, {\n      month: length,\n      timezome: 'UTC',\n    });\n    return this.getMonthDates().map((d) => dtf.format(d));\n  }\n\n  getWeekdayDates({\n    year = 2000,\n    utc = false,\n    firstDayOfWeek = this.firstDayOfWeek,\n  } = {}) {\n    const dates = [];\n    for (let i = 1, j = 0; j < daysInWeek; i++) {\n      const d = utc ? new Date(Date.UTC(year, 0, i)) : new Date(year, 0, i);\n      const day = utc ? d.getUTCDay() : d.getDay();\n      if (day === firstDayOfWeek - 1 || j > 0) {\n        dates.push(d);\n        j++;\n      }\n    }\n    return dates;\n  }\n\n  getDayNames(length) {\n    const dtf = new Intl.DateTimeFormat(this.id, {\n      weekday: length,\n      timeZone: 'UTC',\n    });\n    return this.getWeekdayDates({ firstDayOfWeek: 1, utc: true }).map((d) =>\n      dtf.format(d),\n    );\n  }\n\n  // Days/month/year components for a given month and year\n  getMonthComps(month, year) {\n    const key = `${month}-${year}`;\n    let comps = this.monthData[key];\n    if (!comps) {\n      const inLeapYear =\n        (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n      const firstWeekday = new Date(year, month - 1, 1).getDay() + 1;\n      const days = month === 2 && inLeapYear ? 29 : daysInMonths[month - 1];\n      const weeks = Math.ceil(\n        (days + Math.abs(firstWeekday - this.firstDayOfWeek)) / daysInWeek,\n      );\n      comps = {\n        firstDayOfWeek: this.firstDayOfWeek,\n        inLeapYear,\n        firstWeekday,\n        days,\n        weeks,\n        month,\n        year,\n      };\n      this.monthData[key] = comps;\n    }\n    return comps;\n  }\n\n  // Days/month/year components for today's month\n  getThisMonthComps() {\n    const date = new Date();\n    return this.getMonthComps(date.getMonth() + 1, date.getFullYear());\n  }\n\n  // Day/month/year components for previous month\n  getPrevMonthComps(month, year) {\n    if (month === 1) return this.getMonthComps(12, year - 1);\n    return this.getMonthComps(month - 1, year);\n  }\n\n  // Day/month/year components for next month\n  getNextMonthComps(month, year) {\n    if (month === 12) return this.getMonthComps(1, year + 1);\n    return this.getMonthComps(month + 1, year);\n  }\n\n  getDayFromDate(date) {\n    if (!date) return null;\n    const month = date.getMonth() + 1;\n    const year = date.getUTCFullYear();\n    const comps = this.getMonthComps(month, year);\n    const day = date.getDate();\n    const dayFromEnd = comps.days - day + 1;\n    const weekday = date.getDay() + 1;\n    const weekdayOrdinal = Math.floor((day - 1) / 7 + 1);\n    const weekdayOrdinalFromEnd = Math.floor((comps.days - day) / 7 + 1);\n    const week = Math.ceil(\n      (day + Math.abs(comps.firstWeekday - comps.firstDayOfWeek)) / 7,\n    );\n    const weekFromEnd = comps.weeks - week + 1;\n    return {\n      day,\n      dayFromEnd,\n      weekday,\n      weekdayOrdinal,\n      weekdayOrdinalFromEnd,\n      week,\n      weekFromEnd,\n      month,\n      year,\n      date,\n      dateTime: date.getTime(),\n    };\n  }\n\n  // Buils day components for a given page\n  getCalendarDays({ monthComps, prevMonthComps, nextMonthComps }) {\n    const days = [];\n    const { firstDayOfWeek, firstWeekday } = monthComps;\n    const prevMonthDaysToShow =\n      firstWeekday +\n      (firstWeekday < firstDayOfWeek ? daysInWeek : 0) -\n      firstDayOfWeek;\n    let prevMonth = true;\n    let thisMonth = false;\n    let nextMonth = false;\n    // Formatter for aria labels\n    const formatter = new Intl.DateTimeFormat(this.id, {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n    // Init counters with previous month's data\n    let day = prevMonthComps.days - prevMonthDaysToShow + 1;\n    let dayFromEnd = prevMonthComps.days - day + 1;\n    let weekdayOrdinal = Math.floor((day - 1) / daysInWeek + 1);\n    let weekdayOrdinalFromEnd = 1;\n    let week = prevMonthComps.weeks;\n    let weekFromEnd = 1;\n    let month = prevMonthComps.month;\n    let year = prevMonthComps.year;\n    // Store todays comps\n    const today = new Date();\n    const todayDay = today.getDate();\n    const todayMonth = today.getMonth() + 1;\n    const todayYear = today.getFullYear();\n    // Cycle through 6 weeks (max in month)\n    for (let w = 1; w <= 6; w++) {\n      // Cycle through days in week\n      for (\n        let i = 1, weekday = firstDayOfWeek;\n        i <= daysInWeek;\n        i++, weekday += weekday === daysInWeek ? 1 - daysInWeek : 1\n      ) {\n        // We need to know when to start counting actual month days\n        if (prevMonth && weekday === firstWeekday) {\n          // Reset counters for current month\n          day = 1;\n          dayFromEnd = monthComps.days;\n          weekdayOrdinal = Math.floor((day - 1) / daysInWeek + 1);\n          weekdayOrdinalFromEnd = Math.floor(\n            (monthComps.days - day) / daysInWeek + 1,\n          );\n          week = 1;\n          weekFromEnd = monthComps.weeks;\n          month = monthComps.month;\n          year = monthComps.year;\n          // ...and flag we're tracking actual month days\n          prevMonth = false;\n          thisMonth = true;\n        }\n        // Append day info for the current week\n        // Note: this might or might not be an actual month day\n        //  We don't know how the UI wants to display various days,\n        //  so we'll supply all the data we can\n        const date = new Date(year, month - 1, day);\n        const id = this.format(date, 'YYYY-MM-DD');\n        const weekdayPosition = i;\n        const weekdayPositionFromEnd = daysInWeek - i;\n        const isToday =\n          day === todayDay && month === todayMonth && year === todayYear;\n        const isFirstDay = thisMonth && day === 1;\n        const isLastDay = thisMonth && day === monthComps.days;\n        const onTop = w === 1;\n        const onBottom = w === 6;\n        const onLeft = i === 1;\n        const onRight = i === daysInWeek;\n        days.push({\n          id,\n          label: day.toString(),\n          ariaLabel: formatter.format(date),\n          day,\n          dayFromEnd,\n          weekday,\n          weekdayPosition,\n          weekdayPositionFromEnd,\n          weekdayOrdinal,\n          weekdayOrdinalFromEnd,\n          week,\n          weekFromEnd,\n          month,\n          year,\n          date,\n          dateTime: date.getTime(),\n          isToday,\n          isFirstDay,\n          isLastDay,\n          inMonth: thisMonth,\n          inPrevMonth: prevMonth,\n          inNextMonth: nextMonth,\n          onTop,\n          onBottom,\n          onLeft,\n          onRight,\n          classes: [\n            `id-${id}`,\n            `day-${day}`,\n            `day-from-end-${dayFromEnd}`,\n            `weekday-${weekday}`,\n            `weekday-position-${weekdayPosition}`,\n            `weekday-ordinal-${weekdayOrdinal}`,\n            `weekday-ordinal-from-end-${weekdayOrdinalFromEnd}`,\n            `week-${week}`,\n            `week-from-end-${weekFromEnd}`,\n            {\n              'is-today': isToday,\n              'is-first-day': isFirstDay,\n              'is-last-day': isLastDay,\n              'in-month': thisMonth,\n              'in-prev-month': prevMonth,\n              'in-next-month': nextMonth,\n              'on-top': onTop,\n              'on-bottom': onBottom,\n              'on-left': onLeft,\n              'on-right': onRight,\n            },\n          ],\n        });\n        // See if we've hit the last day of the month\n        if (thisMonth && isLastDay) {\n          thisMonth = false;\n          nextMonth = true;\n          // Reset counters to next month's data\n          day = 1;\n          dayFromEnd = nextMonthComps.days;\n          weekdayOrdinal = 1;\n          weekdayOrdinalFromEnd = Math.floor(\n            (nextMonthComps.days - day) / daysInWeek + 1,\n          );\n          week = 1;\n          weekFromEnd = nextMonthComps.weeks;\n          month = nextMonthComps.month;\n          year = nextMonthComps.year;\n          // Still in the middle of the month (hasn't ended yet)\n        } else {\n          day++;\n          dayFromEnd--;\n          weekdayOrdinal = Math.floor((day - 1) / daysInWeek + 1);\n          weekdayOrdinalFromEnd = Math.floor(\n            (monthComps.days - day) / daysInWeek + 1,\n          );\n        }\n      }\n      // Append week days\n      week++;\n      weekFromEnd--;\n    }\n    return days;\n  }\n}\n"]}]}