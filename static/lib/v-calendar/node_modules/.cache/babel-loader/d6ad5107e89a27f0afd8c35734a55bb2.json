{"remainingRequest":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/guest/Ostanin-dev/static/lib/v-calendar/src/components/PopoverRef.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/src/components/PopoverRef.vue","mtime":1592351795000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { popoversMixin } from '../utils/popovers';\nimport { on, off, elementContains } from '../utils/helpers';\nexport default {\n  name: 'PopoverRef',\n  mixins: [popoversMixin],\n  props: {\n    id: {\n      type: String,\n      default: 'default'\n    },\n    element: null,\n    args: null,\n    visibility: {\n      type: String,\n      default: 'hover-focus',\n      validator: value => ['hover-focus', 'hover', 'focus', 'click', 'visible', 'hidden'].indexOf(value) !== -1\n    },\n    placement: {\n      type: String,\n      default: 'bottom'\n    },\n    positionFixed: Boolean,\n    modifiers: {\n      type: Object,\n      default: () => {}\n    },\n    isInteractive: Boolean,\n    showDelay: {\n      type: Number,\n      default: 10\n    },\n    hideDelay: {\n      type: Number,\n      default: 150\n    }\n  },\n\n  data() {\n    return {\n      reference: null,\n      isHovered: false,\n      isFocused: false\n    };\n  },\n\n  computed: {\n    isActive() {\n      return this.$popoverIsActive(this.id, this.reference);\n    }\n\n  },\n\n  render() {\n    return this.$slots.default[0];\n  },\n\n  watch: {\n    visibility() {\n      this.refreshVisibility();\n    },\n\n    args() {\n      this.$nextTick(() => {\n        if (this.isActive) {\n          this.update();\n        }\n      });\n    }\n\n  },\n\n  mounted() {\n    this.reference = this.element || this.$slots.default[0].elm;\n    this.addEvents();\n    this.$once('beforeDestroy', () => this.removeEvents());\n    this.refreshVisibility();\n  },\n\n  methods: {\n    addEvents() {\n      on(this.reference, 'click', this.onClick);\n      on(this.reference, 'mouseover', this.onMouseOver);\n      on(this.reference, 'mouseleave', this.onMouseLeave);\n      on(this.reference, 'focusin', this.onFocusIn);\n      on(this.reference, 'focusout', this.onFocusOut); // on(this.reference, 'blur', this.onFocusOut);\n    },\n\n    removeEvents() {\n      off(this.reference, 'click', this.onClick);\n      off(this.reference, 'mouseover', this.onMouseOver);\n      off(this.reference, 'mouseleave', this.onMouseLeave);\n      off(this.reference, 'focusin', this.onFocusIn);\n      off(this.reference, 'focusout', this.onFocusOut); // off(this.reference, 'blur', this.onFocusOut);\n    },\n\n    onClick() {\n      if (this.visibility === 'click') {\n        this.toggle();\n      }\n    },\n\n    onMouseOver() {\n      if (!this.isHovered) {\n        this.isHovered = true;\n\n        if (this.visibility.includes('hover')) {\n          this.refreshVisibility();\n        }\n      }\n    },\n\n    onMouseLeave() {\n      if (this.isHovered) {\n        this.isHovered = false;\n\n        if (this.visibility === 'hover' || this.visibility === 'hover-focus' && !this.isFocused) {\n          this.refreshVisibility();\n        }\n      }\n    },\n\n    onFocusIn() {\n      if (!this.isFocused) {\n        this.isFocused = true;\n\n        if (this.visibility.includes('focus')) {\n          this.refreshVisibility();\n        }\n      }\n    },\n\n    onFocusOut(e) {\n      if (this.isFocused && !elementContains(this.reference, e.relatedTarget)) {\n        this.isFocused = false;\n\n        if (this.visibility.includes('focus')) {\n          this.refreshVisibility();\n        }\n      }\n    },\n\n    refreshVisibility() {\n      switch (this.visibility) {\n        case 'hover':\n          if (this.isHovered) {\n            this.show();\n          } else if (this.isActive) {\n            this.hide();\n          }\n\n          break;\n\n        case 'focus':\n          if (this.isFocused) {\n            this.show();\n          } else if (this.isActive) {\n            this.hide();\n          }\n\n          break;\n\n        case 'hover-focus':\n          if (this.isHovered || this.isFocused) {\n            this.show({\n              visibility: this.isFocused ? 'focus' : 'hover'\n            });\n          } else if (this.isActive) {\n            this.hide();\n          }\n\n          break;\n\n        case 'visible':\n          this.show();\n          break;\n\n        case 'hidden':\n          if (this.isActive) {\n            this.hide();\n          }\n\n          break;\n      }\n    },\n\n    toggle() {\n      if (this.isActive) {\n        this.hide();\n      } else {\n        this.$nextTick(() => {\n          this.show();\n        });\n      }\n    },\n\n    show({\n      visibility\n    } = {}) {\n      this.$showPopover({\n        id: this.id,\n        ref: this.reference,\n        args: this.args,\n        visibility: visibility || this.visibility,\n        placement: this.placement,\n        positionFixed: this.positionFixed,\n        modifiers: this.modifiers,\n        isInteractive: this.isInteractive,\n        delay: this.showDelay\n      });\n    },\n\n    hide({\n      delay = this.hideDelay\n    } = {}) {\n      this.$hidePopover({\n        id: this.id,\n        ref: this.reference,\n        delay\n      });\n    },\n\n    update() {\n      this.$updatePopover({\n        id: this.id,\n        ref: this.reference,\n        args: this.args\n      });\n    }\n\n  }\n};",{"version":3,"sources":["PopoverRef.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nimport { popoversMixin } from '../utils/popovers';\nimport { on, off, elementContains } from '../utils/helpers';\n\nexport default {\n  name: 'PopoverRef',\n  mixins: [popoversMixin],\n  props: {\n    id: { type: String, default: 'default' },\n    element: null,\n    args: null,\n    visibility: {\n      type: String,\n      default: 'hover-focus',\n      validator: value =>\n        ['hover-focus', 'hover', 'focus', 'click', 'visible', 'hidden'].indexOf(\n          value,\n        ) !== -1,\n    },\n    placement: { type: String, default: 'bottom' },\n    positionFixed: Boolean,\n    modifiers: { type: Object, default: () => {} },\n    isInteractive: Boolean,\n    showDelay: { type: Number, default: 10 },\n    hideDelay: { type: Number, default: 150 },\n  },\n  data() {\n    return {\n      reference: null,\n      isHovered: false,\n      isFocused: false,\n    };\n  },\n  computed: {\n    isActive() {\n      return this.$popoverIsActive(this.id, this.reference);\n    },\n  },\n  render() {\n    return this.$slots.default[0];\n  },\n  watch: {\n    visibility() {\n      this.refreshVisibility();\n    },\n    args() {\n      this.$nextTick(() => {\n        if (this.isActive) {\n          this.update();\n        }\n      });\n    },\n  },\n  mounted() {\n    this.reference = this.element || this.$slots.default[0].elm;\n    this.addEvents();\n    this.$once('beforeDestroy', () => this.removeEvents());\n    this.refreshVisibility();\n  },\n  methods: {\n    addEvents() {\n      on(this.reference, 'click', this.onClick);\n      on(this.reference, 'mouseover', this.onMouseOver);\n      on(this.reference, 'mouseleave', this.onMouseLeave);\n      on(this.reference, 'focusin', this.onFocusIn);\n      on(this.reference, 'focusout', this.onFocusOut);\n      // on(this.reference, 'blur', this.onFocusOut);\n    },\n    removeEvents() {\n      off(this.reference, 'click', this.onClick);\n      off(this.reference, 'mouseover', this.onMouseOver);\n      off(this.reference, 'mouseleave', this.onMouseLeave);\n      off(this.reference, 'focusin', this.onFocusIn);\n      off(this.reference, 'focusout', this.onFocusOut);\n      // off(this.reference, 'blur', this.onFocusOut);\n    },\n    onClick() {\n      if (this.visibility === 'click') {\n        this.toggle();\n      }\n    },\n    onMouseOver() {\n      if (!this.isHovered) {\n        this.isHovered = true;\n        if (this.visibility.includes('hover')) {\n          this.refreshVisibility();\n        }\n      }\n    },\n    onMouseLeave() {\n      if (this.isHovered) {\n        this.isHovered = false;\n        if (\n          this.visibility === 'hover' ||\n          (this.visibility === 'hover-focus' && !this.isFocused)\n        ) {\n          this.refreshVisibility();\n        }\n      }\n    },\n    onFocusIn() {\n      if (!this.isFocused) {\n        this.isFocused = true;\n        if (this.visibility.includes('focus')) {\n          this.refreshVisibility();\n        }\n      }\n    },\n    onFocusOut(e) {\n      if (this.isFocused && !elementContains(this.reference, e.relatedTarget)) {\n        this.isFocused = false;\n        if (this.visibility.includes('focus')) {\n          this.refreshVisibility();\n        }\n      }\n    },\n    refreshVisibility() {\n      switch (this.visibility) {\n        case 'hover':\n          if (this.isHovered) {\n            this.show();\n          } else if (this.isActive) {\n            this.hide();\n          }\n          break;\n        case 'focus':\n          if (this.isFocused) {\n            this.show();\n          } else if (this.isActive) {\n            this.hide();\n          }\n          break;\n        case 'hover-focus':\n          if (this.isHovered || this.isFocused) {\n            this.show({ visibility: this.isFocused ? 'focus' : 'hover' });\n          } else if (this.isActive) {\n            this.hide();\n          }\n          break;\n        case 'visible':\n          this.show();\n          break;\n        case 'hidden':\n          if (this.isActive) {\n            this.hide();\n          }\n          break;\n      }\n    },\n    toggle() {\n      if (this.isActive) {\n        this.hide();\n      } else {\n        this.$nextTick(() => {\n          this.show();\n        });\n      }\n    },\n    show({ visibility } = {}) {\n      this.$showPopover({\n        id: this.id,\n        ref: this.reference,\n        args: this.args,\n        visibility: visibility || this.visibility,\n        placement: this.placement,\n        positionFixed: this.positionFixed,\n        modifiers: this.modifiers,\n        isInteractive: this.isInteractive,\n        delay: this.showDelay,\n      });\n    },\n    hide({ delay = this.hideDelay } = {}) {\n      this.$hidePopover({\n        id: this.id,\n        ref: this.reference,\n        delay,\n      });\n    },\n    update() {\n      this.$updatePopover({\n        id: this.id,\n        ref: this.reference,\n        args: this.args,\n      });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}