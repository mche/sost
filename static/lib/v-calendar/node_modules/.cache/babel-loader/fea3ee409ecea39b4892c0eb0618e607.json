{"remainingRequest":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js??ref--13-0!/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/pickers/multiple.js","dependencies":[{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/pickers/multiple.js","mtime":1592351795000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { pageForDate, getMaxPage, addPages, arrayHasItems, datesAreEqual } from '../helpers';\nimport { isString, isDate, last, uniq } from '../_';\nexport default class MultiplePicker {\n  constructor({\n    format,\n    parse\n  }) {\n    this._format = format;\n    this._parse = parse;\n  }\n\n  hasValue(value) {\n    return arrayHasItems(value);\n  }\n\n  format(value) {\n    if (this.hasValue(value)) {\n      return value.map(d => this._format(d)).join(', ');\n    }\n\n    return '';\n  }\n\n  parse(text) {\n    if (!isString(text)) return [];\n    return text.split(',').map(s => this._parse(s)).filter(d => isDate(d));\n  }\n\n  normalize(value) {\n    if (!this.hasValue(value)) return [];\n    return uniq(value).sort((a, b) => a.getTime() - b.getTime());\n  }\n\n  filterDisabled({\n    value,\n    isRequired,\n    disabled,\n    fallbackValue\n  }) {\n    if (!this.hasValue(value)) return [];\n    if (!disabled) return value;\n    const newValue = value.filter(d => !disabled.intersectsDate(d));\n    if (!this.hasValue(newValue) && isRequired) return fallbackValue;\n    return newValue;\n  }\n\n  valuesAreEqual(a, b) {\n    const aHasItems = this.hasValue(a);\n    const bHasItems = this.hasValue(b);\n    if (!aHasItems && !bHasItems) return true;\n    if (aHasItems !== bHasItems || a.length !== b.length) return false;\n    return !a.some(d => !b.includes(d)) && !b.some(d => !a.includes(d));\n  }\n\n  getPageRange(value) {\n    if (!this.hasValue(value)) return null;\n    const from = pageForDate(value[0]);\n    const to = getMaxPage(pageForDate(last(value)), addPages(from, 1));\n    return {\n      from,\n      to\n    };\n  }\n\n  handleDayClick(day, picker) {\n    // Done if day selection is invalid\n    if (!picker.dateIsValid(day.date)) {\n      return;\n    }\n\n    let value = []; // Check if no values exist\n\n    if (!this.hasValue(picker.value_)) {\n      value = [day.date]; // Check if value contains the selected date\n    } else if (picker.value_.some(d => d.getTime() === day.dateTime)) {\n      // Calculate the new dates array\n      value = picker.value_.filter(v => !datesAreEqual(v, day.date)); // Re-select the date if it is required\n\n      if (!this.hasValue(value) && picker.isRequired) {\n        value = [day.date];\n      }\n    } else {\n      // Append selected date\n      value = [...picker.value_, day.date];\n    }\n\n    this.doFormatInput = true;\n    this.doHidePopover = false;\n    picker.value_ = this.normalize(value);\n  }\n\n  handleDayMouseEnter() {}\n\n}",{"version":3,"sources":["/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/pickers/multiple.js"],"names":["pageForDate","getMaxPage","addPages","arrayHasItems","datesAreEqual","isString","isDate","last","uniq","MultiplePicker","constructor","format","parse","_format","_parse","hasValue","value","map","d","join","text","split","s","filter","normalize","sort","a","b","getTime","filterDisabled","isRequired","disabled","fallbackValue","newValue","intersectsDate","valuesAreEqual","aHasItems","bHasItems","length","some","includes","getPageRange","from","to","handleDayClick","day","picker","dateIsValid","date","value_","dateTime","v","doFormatInput","doHidePopover","handleDayMouseEnter"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,aALF,QAMO,YANP;AAOA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,IAAjC,QAA6C,MAA7C;AAEA,eAAe,MAAMC,cAAN,CAAqB;AAClCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAoB;AAC7B,SAAKC,OAAL,GAAeF,MAAf;AACA,SAAKG,MAAL,GAAcF,KAAd;AACD;;AAEDG,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,WAAOb,aAAa,CAACa,KAAD,CAApB;AACD;;AAEDL,EAAAA,MAAM,CAACK,KAAD,EAAQ;AACZ,QAAI,KAAKD,QAAL,CAAcC,KAAd,CAAJ,EAA0B;AACxB,aAAOA,KAAK,CAACC,GAAN,CAAUC,CAAC,IAAI,KAAKL,OAAL,CAAaK,CAAb,CAAf,EAAgCC,IAAhC,CAAqC,IAArC,CAAP;AACD;;AACD,WAAO,EAAP;AACD;;AAEDP,EAAAA,KAAK,CAACQ,IAAD,EAAO;AACV,QAAI,CAACf,QAAQ,CAACe,IAAD,CAAb,EAAqB,OAAO,EAAP;AACrB,WAAOA,IAAI,CACRC,KADI,CACE,GADF,EAEJJ,GAFI,CAEAK,CAAC,IAAI,KAAKR,MAAL,CAAYQ,CAAZ,CAFL,EAGJC,MAHI,CAGGL,CAAC,IAAIZ,MAAM,CAACY,CAAD,CAHd,CAAP;AAID;;AAEDM,EAAAA,SAAS,CAACR,KAAD,EAAQ;AACf,QAAI,CAAC,KAAKD,QAAL,CAAcC,KAAd,CAAL,EAA2B,OAAO,EAAP;AAC3B,WAAOR,IAAI,CAACQ,KAAD,CAAJ,CAAYS,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,OAAF,KAAcD,CAAC,CAACC,OAAF,EAAzC,CAAP;AACD;;AAEDC,EAAAA,cAAc,CAAC;AAAEb,IAAAA,KAAF;AAASc,IAAAA,UAAT;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,GAAD,EAAiD;AAC7D,QAAI,CAAC,KAAKjB,QAAL,CAAcC,KAAd,CAAL,EAA2B,OAAO,EAAP;AAC3B,QAAI,CAACe,QAAL,EAAe,OAAOf,KAAP;AACf,UAAMiB,QAAQ,GAAGjB,KAAK,CAACO,MAAN,CAAaL,CAAC,IAAI,CAACa,QAAQ,CAACG,cAAT,CAAwBhB,CAAxB,CAAnB,CAAjB;AACA,QAAI,CAAC,KAAKH,QAAL,CAAckB,QAAd,CAAD,IAA4BH,UAAhC,EAA4C,OAAOE,aAAP;AAC5C,WAAOC,QAAP;AACD;;AAEDE,EAAAA,cAAc,CAACT,CAAD,EAAIC,CAAJ,EAAO;AACnB,UAAMS,SAAS,GAAG,KAAKrB,QAAL,CAAcW,CAAd,CAAlB;AACA,UAAMW,SAAS,GAAG,KAAKtB,QAAL,CAAcY,CAAd,CAAlB;AACA,QAAI,CAACS,SAAD,IAAc,CAACC,SAAnB,EAA8B,OAAO,IAAP;AAC9B,QAAID,SAAS,KAAKC,SAAd,IAA2BX,CAAC,CAACY,MAAF,KAAaX,CAAC,CAACW,MAA9C,EAAsD,OAAO,KAAP;AACtD,WAAO,CAACZ,CAAC,CAACa,IAAF,CAAOrB,CAAC,IAAI,CAACS,CAAC,CAACa,QAAF,CAAWtB,CAAX,CAAb,CAAD,IAAgC,CAACS,CAAC,CAACY,IAAF,CAAOrB,CAAC,IAAI,CAACQ,CAAC,CAACc,QAAF,CAAWtB,CAAX,CAAb,CAAxC;AACD;;AAEDuB,EAAAA,YAAY,CAACzB,KAAD,EAAQ;AAClB,QAAI,CAAC,KAAKD,QAAL,CAAcC,KAAd,CAAL,EAA2B,OAAO,IAAP;AAC3B,UAAM0B,IAAI,GAAG1C,WAAW,CAACgB,KAAK,CAAC,CAAD,CAAN,CAAxB;AACA,UAAM2B,EAAE,GAAG1C,UAAU,CAACD,WAAW,CAACO,IAAI,CAACS,KAAD,CAAL,CAAZ,EAA2Bd,QAAQ,CAACwC,IAAD,EAAO,CAAP,CAAnC,CAArB;AACA,WAAO;AAAEA,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP;AACD;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAMC,MAAN,EAAc;AAC1B;AACA,QAAI,CAACA,MAAM,CAACC,WAAP,CAAmBF,GAAG,CAACG,IAAvB,CAAL,EAAmC;AACjC;AACD;;AACD,QAAIhC,KAAK,GAAG,EAAZ,CAL0B,CAM1B;;AACA,QAAI,CAAC,KAAKD,QAAL,CAAc+B,MAAM,CAACG,MAArB,CAAL,EAAmC;AACjCjC,MAAAA,KAAK,GAAG,CAAC6B,GAAG,CAACG,IAAL,CAAR,CADiC,CAEjC;AACD,KAHD,MAGO,IAAIF,MAAM,CAACG,MAAP,CAAcV,IAAd,CAAmBrB,CAAC,IAAIA,CAAC,CAACU,OAAF,OAAgBiB,GAAG,CAACK,QAA5C,CAAJ,EAA2D;AAChE;AACAlC,MAAAA,KAAK,GAAG8B,MAAM,CAACG,MAAP,CAAc1B,MAAd,CAAqB4B,CAAC,IAAI,CAAC/C,aAAa,CAAC+C,CAAD,EAAIN,GAAG,CAACG,IAAR,CAAxC,CAAR,CAFgE,CAGhE;;AACA,UAAI,CAAC,KAAKjC,QAAL,CAAcC,KAAd,CAAD,IAAyB8B,MAAM,CAAChB,UAApC,EAAgD;AAC9Cd,QAAAA,KAAK,GAAG,CAAC6B,GAAG,CAACG,IAAL,CAAR;AACD;AACF,KAPM,MAOA;AACL;AACAhC,MAAAA,KAAK,GAAG,CAAC,GAAG8B,MAAM,CAACG,MAAX,EAAmBJ,GAAG,CAACG,IAAvB,CAAR;AACD;;AACD,SAAKI,aAAL,GAAqB,IAArB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACAP,IAAAA,MAAM,CAACG,MAAP,GAAgB,KAAKzB,SAAL,CAAeR,KAAf,CAAhB;AACD;;AAEDsC,EAAAA,mBAAmB,GAAG,CAAE;;AA/EU","sourcesContent":["import {\n  pageForDate,\n  getMaxPage,\n  addPages,\n  arrayHasItems,\n  datesAreEqual,\n} from '../helpers';\nimport { isString, isDate, last, uniq } from '../_';\n\nexport default class MultiplePicker {\n  constructor({ format, parse }) {\n    this._format = format;\n    this._parse = parse;\n  }\n\n  hasValue(value) {\n    return arrayHasItems(value);\n  }\n\n  format(value) {\n    if (this.hasValue(value)) {\n      return value.map(d => this._format(d)).join(', ');\n    }\n    return '';\n  }\n\n  parse(text) {\n    if (!isString(text)) return [];\n    return text\n      .split(',')\n      .map(s => this._parse(s))\n      .filter(d => isDate(d));\n  }\n\n  normalize(value) {\n    if (!this.hasValue(value)) return [];\n    return uniq(value).sort((a, b) => a.getTime() - b.getTime());\n  }\n\n  filterDisabled({ value, isRequired, disabled, fallbackValue }) {\n    if (!this.hasValue(value)) return [];\n    if (!disabled) return value;\n    const newValue = value.filter(d => !disabled.intersectsDate(d));\n    if (!this.hasValue(newValue) && isRequired) return fallbackValue;\n    return newValue;\n  }\n\n  valuesAreEqual(a, b) {\n    const aHasItems = this.hasValue(a);\n    const bHasItems = this.hasValue(b);\n    if (!aHasItems && !bHasItems) return true;\n    if (aHasItems !== bHasItems || a.length !== b.length) return false;\n    return !a.some(d => !b.includes(d)) && !b.some(d => !a.includes(d));\n  }\n\n  getPageRange(value) {\n    if (!this.hasValue(value)) return null;\n    const from = pageForDate(value[0]);\n    const to = getMaxPage(pageForDate(last(value)), addPages(from, 1));\n    return { from, to };\n  }\n\n  handleDayClick(day, picker) {\n    // Done if day selection is invalid\n    if (!picker.dateIsValid(day.date)) {\n      return;\n    }\n    let value = [];\n    // Check if no values exist\n    if (!this.hasValue(picker.value_)) {\n      value = [day.date];\n      // Check if value contains the selected date\n    } else if (picker.value_.some(d => d.getTime() === day.dateTime)) {\n      // Calculate the new dates array\n      value = picker.value_.filter(v => !datesAreEqual(v, day.date));\n      // Re-select the date if it is required\n      if (!this.hasValue(value) && picker.isRequired) {\n        value = [day.date];\n      }\n    } else {\n      // Append selected date\n      value = [...picker.value_, day.date];\n    }\n    this.doFormatInput = true;\n    this.doHidePopover = false;\n    picker.value_ = this.normalize(value);\n  }\n\n  handleDayMouseEnter() {}\n}\n"]}]}