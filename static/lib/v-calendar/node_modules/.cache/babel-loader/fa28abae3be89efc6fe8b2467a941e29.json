{"remainingRequest":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js??ref--13-0!/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/pickers/single.js","dependencies":[{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/pickers/single.js","mtime":1592351795000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { pageForDate, datesAreEqual } from '../helpers';\nimport { isDate } from '../_';\nexport default class SinglePicker {\n  constructor({\n    format,\n    parse\n  }) {\n    this._format = format;\n    this._parse = parse;\n  }\n\n  hasValue(value) {\n    return isDate(value);\n  }\n\n  format(value) {\n    return this.hasValue(value) ? this._format(value) : '';\n  }\n\n  parse(text) {\n    const value = this._parse(text);\n\n    return isDate(value) ? value : null;\n  }\n\n  normalize(value) {\n    return value && new Date(value);\n  }\n\n  filterDisabled({\n    value,\n    isRequired,\n    disabled,\n    fallbackValue\n  }) {\n    if (!this.hasValue(value) && isRequired) {\n      return fallbackValue;\n    }\n\n    if (this.hasValue(value) && disabled && disabled.intersectsDate(value)) {\n      return null;\n    }\n\n    return value;\n  }\n\n  valuesAreEqual(a, b) {\n    return datesAreEqual(a, b);\n  }\n\n  getPageRange(value) {\n    if (!this.hasValue(value)) {\n      return null;\n    }\n\n    const from = pageForDate(value);\n    return {\n      from,\n      to: from\n    };\n  }\n\n  handleDayClick(day, picker) {\n    // Done if day selection is invalid\n    if (!picker.dateIsValid(day.date)) {\n      return;\n    } // Check if selected date was reselected\n\n\n    if (this.valuesAreEqual(day.date, picker.value_)) {\n      // Reset value to null if allowed\n      if (!picker.isRequired) {\n        picker.value_ = null;\n      }\n    } else {\n      picker.doFormatInput = true;\n      picker.doHidePopover = true; // Set value to selected date\n\n      picker.value_ = day.date;\n    }\n  }\n\n  handleDayMouseEnter() {// Don't do anything here\n  }\n\n}",{"version":3,"sources":["/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/pickers/single.js"],"names":["pageForDate","datesAreEqual","isDate","SinglePicker","constructor","format","parse","_format","_parse","hasValue","value","text","normalize","Date","filterDisabled","isRequired","disabled","fallbackValue","intersectsDate","valuesAreEqual","a","b","getPageRange","from","to","handleDayClick","day","picker","dateIsValid","date","value_","doFormatInput","doHidePopover","handleDayMouseEnter"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,QAA2C,YAA3C;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAoB;AAC7B,SAAKC,OAAL,GAAeF,MAAf;AACA,SAAKG,MAAL,GAAcF,KAAd;AACD;;AAEDG,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,WAAOR,MAAM,CAACQ,KAAD,CAAb;AACD;;AAEDL,EAAAA,MAAM,CAACK,KAAD,EAAQ;AACZ,WAAO,KAAKD,QAAL,CAAcC,KAAd,IAAuB,KAAKH,OAAL,CAAaG,KAAb,CAAvB,GAA6C,EAApD;AACD;;AAEDJ,EAAAA,KAAK,CAACK,IAAD,EAAO;AACV,UAAMD,KAAK,GAAG,KAAKF,MAAL,CAAYG,IAAZ,CAAd;;AACA,WAAOT,MAAM,CAACQ,KAAD,CAAN,GAAgBA,KAAhB,GAAwB,IAA/B;AACD;;AAEDE,EAAAA,SAAS,CAACF,KAAD,EAAQ;AACf,WAAOA,KAAK,IAAI,IAAIG,IAAJ,CAASH,KAAT,CAAhB;AACD;;AAEDI,EAAAA,cAAc,CAAC;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,UAAT;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,GAAD,EAAiD;AAC7D,QAAI,CAAC,KAAKR,QAAL,CAAcC,KAAd,CAAD,IAAyBK,UAA7B,EAAyC;AACvC,aAAOE,aAAP;AACD;;AACD,QAAI,KAAKR,QAAL,CAAcC,KAAd,KAAwBM,QAAxB,IAAoCA,QAAQ,CAACE,cAAT,CAAwBR,KAAxB,CAAxC,EAAwE;AACtE,aAAO,IAAP;AACD;;AACD,WAAOA,KAAP;AACD;;AAEDS,EAAAA,cAAc,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACnB,WAAOpB,aAAa,CAACmB,CAAD,EAAIC,CAAJ,CAApB;AACD;;AAEDC,EAAAA,YAAY,CAACZ,KAAD,EAAQ;AAClB,QAAI,CAAC,KAAKD,QAAL,CAAcC,KAAd,CAAL,EAA2B;AACzB,aAAO,IAAP;AACD;;AACD,UAAMa,IAAI,GAAGvB,WAAW,CAACU,KAAD,CAAxB;AACA,WAAO;AAAEa,MAAAA,IAAF;AAAQC,MAAAA,EAAE,EAAED;AAAZ,KAAP;AACD;;AAEDE,EAAAA,cAAc,CAACC,GAAD,EAAMC,MAAN,EAAc;AAC1B;AACA,QAAI,CAACA,MAAM,CAACC,WAAP,CAAmBF,GAAG,CAACG,IAAvB,CAAL,EAAmC;AACjC;AACD,KAJyB,CAK1B;;;AACA,QAAI,KAAKV,cAAL,CAAoBO,GAAG,CAACG,IAAxB,EAA8BF,MAAM,CAACG,MAArC,CAAJ,EAAkD;AAChD;AACA,UAAI,CAACH,MAAM,CAACZ,UAAZ,EAAwB;AACtBY,QAAAA,MAAM,CAACG,MAAP,GAAgB,IAAhB;AACD;AACF,KALD,MAKO;AACLH,MAAAA,MAAM,CAACI,aAAP,GAAuB,IAAvB;AACAJ,MAAAA,MAAM,CAACK,aAAP,GAAuB,IAAvB,CAFK,CAGL;;AACAL,MAAAA,MAAM,CAACG,MAAP,GAAgBJ,GAAG,CAACG,IAApB;AACD;AACF;;AAEDI,EAAAA,mBAAmB,GAAG,CACpB;AACD;;AAlE+B","sourcesContent":["import { pageForDate, datesAreEqual } from '../helpers';\nimport { isDate } from '../_';\n\nexport default class SinglePicker {\n  constructor({ format, parse }) {\n    this._format = format;\n    this._parse = parse;\n  }\n\n  hasValue(value) {\n    return isDate(value);\n  }\n\n  format(value) {\n    return this.hasValue(value) ? this._format(value) : '';\n  }\n\n  parse(text) {\n    const value = this._parse(text);\n    return isDate(value) ? value : null;\n  }\n\n  normalize(value) {\n    return value && new Date(value);\n  }\n\n  filterDisabled({ value, isRequired, disabled, fallbackValue }) {\n    if (!this.hasValue(value) && isRequired) {\n      return fallbackValue;\n    }\n    if (this.hasValue(value) && disabled && disabled.intersectsDate(value)) {\n      return null;\n    }\n    return value;\n  }\n\n  valuesAreEqual(a, b) {\n    return datesAreEqual(a, b);\n  }\n\n  getPageRange(value) {\n    if (!this.hasValue(value)) {\n      return null;\n    }\n    const from = pageForDate(value);\n    return { from, to: from };\n  }\n\n  handleDayClick(day, picker) {\n    // Done if day selection is invalid\n    if (!picker.dateIsValid(day.date)) {\n      return;\n    }\n    // Check if selected date was reselected\n    if (this.valuesAreEqual(day.date, picker.value_)) {\n      // Reset value to null if allowed\n      if (!picker.isRequired) {\n        picker.value_ = null;\n      }\n    } else {\n      picker.doFormatInput = true;\n      picker.doHidePopover = true;\n      // Set value to selected date\n      picker.value_ = day.date;\n    }\n  }\n\n  handleDayMouseEnter() {\n    // Don't do anything here\n  }\n}\n"]}]}