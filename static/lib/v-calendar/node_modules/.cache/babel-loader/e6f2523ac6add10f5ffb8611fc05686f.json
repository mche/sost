{"remainingRequest":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js??ref--13-0!/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/buildMediaQuery.js","dependencies":[{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/buildMediaQuery.js","mtime":1592351795000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { isString, isArray, map, has, get } from './_'; // This function gratuitously borrowed from TailwindCSS\n// https://github.com/tailwindcss/tailwindcss/blob/master/src/util/buildMediaQuery.js\n\nexport default function buildMediaQuery(screens) {\n  // Default min width\n  if (isString(screens)) {\n    screens = {\n      min: screens\n    };\n  } // Wrap in array\n\n\n  if (!isArray(screens)) {\n    screens = [screens];\n  }\n\n  return screens.map(screen => {\n    if (has(screen, 'raw')) {\n      return screen.raw;\n    }\n\n    return map(screen, (value, feature) => {\n      feature = get({\n        min: 'min-width',\n        max: 'max-width'\n      }, feature, feature);\n      return `(${feature}: ${value})`;\n    }).join(' and ');\n  }).join(', ');\n}",{"version":3,"sources":["/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/buildMediaQuery.js"],"names":["isString","isArray","map","has","get","buildMediaQuery","screens","min","screen","raw","value","feature","max","join"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,GAAtC,QAAiD,KAAjD,C,CAEA;AACA;;AACA,eAAe,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAC/C;AACA,MAAIN,QAAQ,CAACM,OAAD,CAAZ,EAAuB;AACrBA,IAAAA,OAAO,GAAG;AAAEC,MAAAA,GAAG,EAAED;AAAP,KAAV;AACD,GAJ8C,CAK/C;;;AACA,MAAI,CAACL,OAAO,CAACK,OAAD,CAAZ,EAAuB;AACrBA,IAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD;;AACD,SAAOA,OAAO,CACXJ,GADI,CACAM,MAAM,IAAI;AACb,QAAIL,GAAG,CAACK,MAAD,EAAS,KAAT,CAAP,EAAwB;AACtB,aAAOA,MAAM,CAACC,GAAd;AACD;;AACD,WAAOP,GAAG,CAACM,MAAD,EAAS,CAACE,KAAD,EAAQC,OAAR,KAAoB;AACrCA,MAAAA,OAAO,GAAGP,GAAG,CACX;AACEG,QAAAA,GAAG,EAAE,WADP;AAEEK,QAAAA,GAAG,EAAE;AAFP,OADW,EAKXD,OALW,EAMXA,OANW,CAAb;AAQA,aAAQ,IAAGA,OAAQ,KAAID,KAAM,GAA7B;AACD,KAVS,CAAH,CAUJG,IAVI,CAUC,OAVD,CAAP;AAWD,GAhBI,EAiBJA,IAjBI,CAiBC,IAjBD,CAAP;AAkBD","sourcesContent":["import { isString, isArray, map, has, get } from './_';\n\n// This function gratuitously borrowed from TailwindCSS\n// https://github.com/tailwindcss/tailwindcss/blob/master/src/util/buildMediaQuery.js\nexport default function buildMediaQuery(screens) {\n  // Default min width\n  if (isString(screens)) {\n    screens = { min: screens };\n  }\n  // Wrap in array\n  if (!isArray(screens)) {\n    screens = [screens];\n  }\n  return screens\n    .map(screen => {\n      if (has(screen, 'raw')) {\n        return screen.raw;\n      }\n      return map(screen, (value, feature) => {\n        feature = get(\n          {\n            min: 'min-width',\n            max: 'max-width',\n          },\n          feature,\n          feature,\n        );\n        return `(${feature}: ${value})`;\n      }).join(' and ');\n    })\n    .join(', ');\n}\n"]}]}