{"remainingRequest":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js!/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js??ref--13-0!/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/mixins/root.js","dependencies":[{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/mixins/root.js","mtime":1592351795000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { addDays } from 'date-fns';\nimport Theme from '../theme';\nimport Locale from '../locale';\nimport { isObject, isArray, defaultsDeep } from '../_';\nimport { defaultsMixin } from '../defaults';\nimport { popoversMixin } from '../popovers';\nimport { setupScreens } from '../screens';\nimport Attribute from '../attribute';\nexport const rootMixin = {\n  mixins: [defaultsMixin, popoversMixin],\n  props: {\n    color: String,\n    isDark: Boolean,\n    theme: Object,\n    firstDayOfWeek: Number,\n    masks: Object,\n    locale: [String, Object],\n    minDate: null,\n    maxDate: null,\n    disabledDates: null,\n    availableDates: null\n  },\n  computed: {\n    $theme() {\n      // Return the theme prop if it is an instance of the Theme class\n      if (this.theme instanceof Theme) return this.theme; // Merge the default theme with the provided theme\n\n      const config = defaultsDeep(this.theme, this.$defaults.theme); // Merge in the color and isDark props if they were specifically provided\n\n      config.color = this.passedProp('color', config.color);\n      config.isDark = this.passedProp('isDark', config.isDark); // Create the theme\n\n      return new Theme(config);\n    },\n\n    $locale() {\n      // Return the locale prop if it is an instance of the Locale class\n      if (this.locale instanceof Locale) return this.locale; // Build up a base config from component props\n\n      const config = isObject(this.locale) ? this.locale : {\n        id: this.locale,\n        firstDayOfWeek: this.firstDayOfWeek,\n        masks: this.masks\n      }; // Return new locale\n\n      return new Locale(config, this.$locales);\n    },\n\n    format() {\n      return (date, mask) => this.$locale ? this.$locale.format(date, mask) : '';\n    },\n\n    disabledAttribute() {\n      // Build up a complete list of disabled dates\n      let dates = []; // Initialize with disabled dates prop, if any\n\n      if (this.disabledDates) {\n        dates = isArray(this.disabledDates) ? this.disabledDates : [this.disabledDates];\n      } // Add disabled dates for minDate and maxDate props\n\n\n      const minDate = this.$locale.toDate(this.minDate);\n      const maxDate = this.$locale.toDate(this.maxDate);\n\n      if (minDate) {\n        dates.push({\n          start: null,\n          end: addDays(minDate, -1)\n        });\n      }\n\n      if (maxDate) {\n        dates.push({\n          start: addDays(maxDate, 1),\n          end: null\n        });\n      } // Return the new disabled attribute\n\n\n      return new Attribute({\n        key: 'disabled',\n        dates,\n        excludeDates: this.availableDates,\n        excludeMode: 'includes',\n        order: 100\n      }, this.$theme, this.$locale);\n    }\n\n  },\n\n  created() {\n    setupScreens(this.$defaults.screens);\n  }\n\n};",{"version":3,"sources":["/home/guest/Ostanin-dev/static/lib/v-calendar/src/utils/mixins/root.js"],"names":["addDays","Theme","Locale","isObject","isArray","defaultsDeep","defaultsMixin","popoversMixin","setupScreens","Attribute","rootMixin","mixins","props","color","String","isDark","Boolean","theme","Object","firstDayOfWeek","Number","masks","locale","minDate","maxDate","disabledDates","availableDates","computed","$theme","config","$defaults","passedProp","$locale","id","$locales","format","date","mask","disabledAttribute","dates","toDate","push","start","end","key","excludeDates","excludeMode","order","created","screens"],"mappings":"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","sourcesContent":["import { addDays } from 'date-fns';\nimport Theme from '../theme';\nimport Locale from '../locale';\nimport { isObject, isArray, defaultsDeep } from '../_';\nimport { defaultsMixin } from '../defaults';\nimport { popoversMixin } from '../popovers';\nimport { setupScreens } from '../screens';\nimport Attribute from '../attribute';\n\nexport const rootMixin = {\n  mixins: [defaultsMixin, popoversMixin],\n  props: {\n    color: String,\n    isDark: Boolean,\n    theme: Object,\n    firstDayOfWeek: Number,\n    masks: Object,\n    locale: [String, Object],\n    minDate: null,\n    maxDate: null,\n    disabledDates: null,\n    availableDates: null,\n  },\n  computed: {\n    $theme() {\n      // Return the theme prop if it is an instance of the Theme class\n      if (this.theme instanceof Theme) return this.theme;\n      // Merge the default theme with the provided theme\n      const config = defaultsDeep(this.theme, this.$defaults.theme);\n      // Merge in the color and isDark props if they were specifically provided\n      config.color = this.passedProp('color', config.color);\n      config.isDark = this.passedProp('isDark', config.isDark);\n      // Create the theme\n      return new Theme(config);\n    },\n    $locale() {\n      // Return the locale prop if it is an instance of the Locale class\n      if (this.locale instanceof Locale) return this.locale;\n      // Build up a base config from component props\n      const config = isObject(this.locale)\n        ? this.locale\n        : {\n            id: this.locale,\n            firstDayOfWeek: this.firstDayOfWeek,\n            masks: this.masks,\n          };\n      // Return new locale\n      return new Locale(config, this.$locales);\n    },\n    format() {\n      return (date, mask) =>\n        this.$locale ? this.$locale.format(date, mask) : '';\n    },\n    disabledAttribute() {\n      // Build up a complete list of disabled dates\n      let dates = [];\n      // Initialize with disabled dates prop, if any\n      if (this.disabledDates) {\n        dates = isArray(this.disabledDates)\n          ? this.disabledDates\n          : [this.disabledDates];\n      }\n      // Add disabled dates for minDate and maxDate props\n      const minDate = this.$locale.toDate(this.minDate);\n      const maxDate = this.$locale.toDate(this.maxDate);\n      if (minDate) {\n        dates.push({ start: null, end: addDays(minDate, -1) });\n      }\n      if (maxDate) {\n        dates.push({ start: addDays(maxDate, 1), end: null });\n      }\n      // Return the new disabled attribute\n      return new Attribute(\n        {\n          key: 'disabled',\n          dates,\n          excludeDates: this.availableDates,\n          excludeMode: 'includes',\n          order: 100,\n        },\n        this.$theme,\n        this.$locale,\n      );\n    },\n  },\n  created() {\n    setupScreens(this.$defaults.screens);\n  },\n};\n"]}]}