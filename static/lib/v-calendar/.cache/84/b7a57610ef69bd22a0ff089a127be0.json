{"id":"y07W","dependencies":[{"name":"/home/guest/Ostanin-dev/static/lib/v-calendar/package.json","includedInParent":true,"mtime":1594720163426},{"name":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/lodash/package.json","includedInParent":true,"mtime":1594896976337},{"name":"./_baseMerge","loc":{"line":1,"column":24},"parent":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/lodash/mergeWith.js","resolved":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/lodash/_baseMerge.js"},{"name":"./_createAssigner","loc":{"line":2,"column":29},"parent":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/lodash/mergeWith.js","resolved":"/home/guest/Ostanin-dev/static/lib/v-calendar/node_modules/lodash/_createAssigner.js"}],"generated":{"js":"var e=require(\"./_baseMerge\"),r=require(\"./_createAssigner\"),i=r(function(r,i,s,u){e(r,i,s,u)});module.exports=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":30}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":32}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":40}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":35,"column":0},"generated":{"line":1,"column":61}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":35,"column":0},"generated":{"line":1,"column":63}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":35,"column":0},"generated":{"line":1,"column":65}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":35,"column":0},"generated":{"line":1,"column":74}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":35,"column":0},"generated":{"line":1,"column":76}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":35,"column":0},"generated":{"line":1,"column":78}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":35,"column":0},"generated":{"line":1,"column":80}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":36,"column":0},"generated":{"line":1,"column":83}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":36,"column":0},"generated":{"line":1,"column":85}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":36,"column":0},"generated":{"line":1,"column":87}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":36,"column":0},"generated":{"line":1,"column":89}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":36,"column":0},"generated":{"line":1,"column":91}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":39,"column":0},"generated":{"line":1,"column":96}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":39,"column":0},"generated":{"line":1,"column":103}},{"source":"../../node_modules/lodash/mergeWith.js","original":{"line":39,"column":0},"generated":{"line":1,"column":111}}],"sources":{"../../node_modules/lodash/mergeWith.js":"var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nmodule.exports = mergeWith;\n"},"lineCount":null}},"error":null,"hash":"46c153dc9bec5c86997f4e1b85356b94","cacheData":{"env":{}}}